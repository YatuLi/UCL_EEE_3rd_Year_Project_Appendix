#
# Default settings for the simulation
#

## Scenario settings
# name: could be set up with any names. 
Scenario.name = DirectDeliveryRouterSetting
Scenario.simulateConnections = true
Scenario.updateInterval = 0.1
# 43200s == 12h
# Scenario.endTime = 10000000
Scenario.endTime = 43200

## for output of Settings pair
Settings.output = Settings_Outputs.txt

## Interface-specific settings:
# type : which interface class the interface belongs to
# For different types, the sub-parameters are interface-specific
# For SimpleBroadcastInterface, the parameters are:
# transmitSpeed : transmit speed of the interface (bytes per second) 
# transmitRange : range of the interface (meters)

# "Bluetooth" interface for all nodes
# btInterface.type = SimpleBroadcastInterface
# Transmit speed of 2 Mbps = 250kBps
# btInterface.transmitSpeed = 31.25M
# btInterface.transmitRange = 100

# Wi-Fi Direct Interface  for all nodes
wdInterface.type = SimpleBroadcastInterface
wdInterface.transmitSpeed = 250k
wdInterface.transmitRange = 200
wdInterface.scanInterval = 20


# High speed, long range, interface for group 4 (see Group4, 
# interface2)
highspeedInterface.type = SimpleBroadcastInterface
highspeedInterface.transmitSpeed = 10M
highspeedInterface.transmitRange = 10

# Define 6 different node groups
Scenario.nrofHostGroups = 6

## Group-specific settings:
# groupID : Group's identifier. Used as the prefix of host names
# nrofHosts: number of hosts in the group
# movementModel: movement model of the hosts (valid class name from movement package)
# waitTime: minimum and maximum wait times (seconds) after reaching destination
# speed: minimum and maximum speeds (m/s) when moving on a path
# bufferSize: size of the message buffer (bytes)
# router: router used to route messages (valid class name from routing package)
# activeTimes: Time intervals when the nodes in the group are active (start1, end1, start2, end2, ...)
# msgTtl : TTL (minutes) of the messages created by this host group, default=infinite

## Group and movement model specific settings
# pois: Points Of Interest indexes and probabilities (poiIndex1, poiProb1, poiIndex2, poiProb2, ... )
#       for ShortestPathMapBasedMovement
# okMaps : which map nodes are OK for the group (map file indexes), default=all 
#          for all MapBasedMovent models
# routeFile: route's file path - for MapRouteMovement
# routeType: route's type - for MapRouteMovement


# Common settings for all groups
Group.movementModel = ShortestPathMapBasedMovement
Group.router = EnergyAwareEpidRouter
## These 4 settings are for EnergyAwareRouter
Group.EnergyAwareEpidRouter.firstEnergyThreshold = 0.999
Group.EnergyAwareEpidRouter.firstExtraInactiveTime = 29
Group.EnergyAwareEpidRouter.secondEnergyThreshold = 0.98
Group.EnergyAwareEpidRouter.secondExtraInactiveTime = 30
Group.EnergyAwareEpidRouter.tramModel = true
Group.EnergyAwareEpidRouter.busModel = true
## These 2 settings are for SprayAndWaitRouter, not universal
#Group.SprayAndWaitRouter.binaryMode = true
#Group.SprayAndWaitRouter.nrofCopies = 2 
Group.bufferSize = 5M
Group.waitTime = 0, 120
# All nodes have the Wi-Fi Direct interface (by default)
Group.nrofInterfaces = 1
Group.interface1 = wdInterface
# Walking speeds
Group.speed = 0.5, 1.5
# Message TTL of 300 minutes (5 hours)
Group.msgTtl = 300
# Scaninterval settings for all groups, unit: seconds
Group.net.scanInterval = 1

# Group1, 2 and 3 are all have 40 hosts per group.
Group.nrofHosts = 40

# group1 (pedestrians) specific settings
Group1.groupID = p

# group2 specific settings
Group2.groupID = c
# cars can drive only on roads
Group2.okMaps = 1
# 10-50 km/h
Group2.speed = 2.7, 13.9

# another group of pedestrians
Group3.groupID = w

# The Tram groups
Group4.groupID = t
Group4.bufferSize = 50M
Group4.movementModel = MapRouteMovement
Group4.routeFile = data/tram3.wkt
Group4.routeType = 1
Group4.waitTime = 10, 30
Group4.speed = 7, 10
Group4.nrofHosts = 2
Group4.nrofInterfaces = 1
## Extra net for Trams with HighSpeed
Group4.interface1 = wdInterface
#Group4.interface1 = highspeedInterface

Group5.groupID = t
Group5.bufferSize = 50M
Group5.movementModel = MapRouteMovement
Group5.routeFile = data/tram4.wkt
Group5.routeType = 2
Group5.waitTime = 10, 30
Group5.speed = 7, 10
Group5.nrofHosts = 2
## Extra net for Trams with HighSpeed
Group5.nrofInterfaces = 1
Group5.interface1 = wdInterface



Group6.groupID = t
Group6.bufferSize = 50M
Group6.movementModel = MapRouteMovement
Group6.routeFile = data/tram10.wkt
Group6.routeType = 2
Group6.waitTime = 10, 30
Group6.speed = 7, 10
Group6.nrofHosts = 2
## Extra net for Trams with HighSpeed
Group6.nrofInterfaces = 1
Group6.interface1 = wdInterface



## Message creation parameters 
# How many event generators
Events.nrof = 1
# Class of the first event generator
Events1.class = MessageEventGenerator
# (following settings are specific for the MessageEventGenerator class)
# Creation interval in seconds (one new message every 25 to 35 seconds)
Events1.interval = 25,35
# Message sizes (500kB - 1MB)
Events1.size = 500k,1M
# range of message source/destination addresses
Events1.hosts = 0,125
# Message ID prefix
Events1.prefix = M


## Movement model settings
# seed for movement models' pseudo random number generator (default = 0)
MovementModel.rngSeed = 1
# World's size for Movement Models without implicit size (width, height; meters)
MovementModel.worldSize = 4500, 3400
# How long time to move hosts in the world before real simulation
MovementModel.warmup = 1000

## Map based movement -movement model specific settings
MapBasedMovement.nrofMapFiles = 4

MapBasedMovement.mapFile1 = data/roads.wkt
MapBasedMovement.mapFile2 = data/main_roads.wkt
MapBasedMovement.mapFile3 = data/pedestrian_paths.wkt
MapBasedMovement.mapFile4 = data/shops.wkt

## Energy model settings (EnergyModel.java)

# the new setting for granularity in case of an early run
EnergyLevelReport.granularity = 100
# the new setting for apps after adding up the granularity setting
EnergyLevelReport.apps = 1
# the setting for source, as we have errors on source setting
EnergyLevelReport.source = 1


# the initial energy for nodes
Group.initialEnergy = 10
# energy spend for each scanning
Group.scanEnergy = 0.001
# energy spend for each scanning response
Group.scanResponseEnergy = 0.001
# power for transmission data
Group.transmitEnergy = 0.0001
# the time taken before initial energy starts decreasing in case 
# of transmssion and scanning activities
Group.energyWarmup = 0
# base energy consumption per second -- New parameter from 1.6 
Group.baseEnergy = 0.0001 

## The setting for ContactTimesReports
ContactTimesReport.granularity = 100


## These 6 settings might not be required in 1.6, these are from  # EnergyReporter.java which is deleted in 1.6 version.
# energy cost for a successful connetion by source
#### Group.srcConnectionEnergy = 1
# energy cost for a successful connection by destination
#### Group.dstConnectionEnergy = 1
# power for maintaining  a connection by source
#### Group.srcDeliveryEnergy = 1
# power for maintaining a connection by destination
#### Group.dstDeliveryEnergy = 1
# power for being in inquire mode by source
#### Group.inquiryEnergy = 1
# power for being in scanning mode by destination
#### Group.scanEnergy = 1


## Reports - all report names have to be valid report classes

# how many reports to load
Report.nrofReports = 12
# length of the warm up period (simulated seconds)
Report.warmup = 0
# default directory of reports (can be overridden per Report with output setting)
Report.reportDir = reports/
# Report classes to load
Report.report1 = ContactTimesReport
Report.report2 = ConnectivityONEReport
Report.report3 = MessageReport
Report.report4 = ConnectivityDtnsim2Report
Report.report5 = ContactsPerHourReport
Report.report6 = DeliveredMessagesReport
Report.report7 = DistanceDelayReport
Report.report8 = EventLogReport
Report.report9 = MessageDelayReport
Report.report10 = MessageDeliveryReport
Report.report11 = MessageStatsReport
Report.report12 = EnergyLevelReport






## Default settings for some routers settings
ProphetRouter.secondsInTimeUnit = 30
SprayAndWaitRouter.nrofCopies = 6
SprayAndWaitRouter.binaryMode = true

## Optimization settings -- these affect the speed of the simulation
## see World class for details.
Optimization.cellSizeMult = 5
Optimization.randomizeUpdateOrder = true


## GUI settings

# GUI underlay image settings
GUI.UnderlayImage.fileName = data/helsinki_underlay.png
# Image offset in pixels (x, y)
GUI.UnderlayImage.offset = 64, 20
# Scaling factor for the image
GUI.UnderlayImage.scale = 4.75
# Image rotation (radians)
GUI.UnderlayImage.rotate = -0.015

# how many events to show in the log panel (default = 30)
GUI.EventLogPanel.nrofEvents = 100
# Regular Expression log filter (see Pattern-class from the Java API for RE-matching details)
#GUI.EventLogPanel.REfilter = .*p[1-9]<->p[1-9]$
